/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface TestContractInterface extends Interface {
  functions: {
    doSomethingInt: TypedFunctionDescription<{
      encode([_intValue]: [BigNumberish]): string;
    }>;

    getSomethingInt: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class TestContract extends Contract {
  connect(signerOrProvider: Signer | Provider | string): TestContract;
  attach(addressOrName: string): TestContract;
  deployed(): Promise<TestContract>;

  on(event: EventFilter | string, listener: Listener): TestContract;
  once(event: EventFilter | string, listener: Listener): TestContract;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): TestContract;
  removeAllListeners(eventName: EventFilter | string): TestContract;
  removeListener(eventName: any, listener: Listener): TestContract;

  interface: TestContractInterface;

  functions: {
    doSomethingInt(
      _intValue: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "doSomethingInt(uint256)"(
      _intValue: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    getSomethingInt(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getSomethingInt()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };

  doSomethingInt(
    _intValue: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "doSomethingInt(uint256)"(
    _intValue: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  getSomethingInt(overrides?: TransactionOverrides): Promise<BigNumber>;

  "getSomethingInt()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  filters: {};

  estimate: {
    doSomethingInt(
      _intValue: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "doSomethingInt(uint256)"(
      _intValue: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    getSomethingInt(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getSomethingInt()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
