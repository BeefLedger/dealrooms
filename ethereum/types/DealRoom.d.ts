/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface DealRoomInterface extends Interface {
  functions: {
    buyer: TypedFunctionDescription<{ encode([]: []): string }>;

    creator: TypedFunctionDescription<{ encode([]: []): string }>;

    dealCount: TypedFunctionDescription<{ encode([]: []): string }>;

    deals: TypedFunctionDescription<{ encode([]: [BigNumberish]): string }>;

    erc20: TypedFunctionDescription<{ encode([]: []): string }>;

    erc721: TypedFunctionDescription<{ encode([]: []): string }>;

    owner: TypedFunctionDescription<{ encode([]: []): string }>;

    seller: TypedFunctionDescription<{ encode([]: []): string }>;

    makeDeal: TypedFunctionDescription<{
      encode([_erc20, _erc721, _price, _assetItems]: [
        string,
        string,
        BigNumberish,
        BigNumberish[]
      ]): string;
    }>;

    missingDealAssets: TypedFunctionDescription<{
      encode([id]: [BigNumberish]): string;
    }>;

    missingDealCoins: TypedFunctionDescription<{
      encode([id]: [BigNumberish]): string;
    }>;

    settle: TypedFunctionDescription<{ encode([id]: [BigNumberish]): string }>;

    withdrawDealAssets: TypedFunctionDescription<{
      encode([dealId, count]: [BigNumberish, BigNumberish]): string;
    }>;

    withdrawDealCoins: TypedFunctionDescription<{
      encode([dealId]: [BigNumberish]): string;
    }>;

    getOwner: TypedFunctionDescription<{ encode([]: []): string }>;

    getBuyer: TypedFunctionDescription<{ encode([]: []): string }>;

    getSeller: TypedFunctionDescription<{ encode([]: []): string }>;

    changeOwner: TypedFunctionDescription<{
      encode([newOwner]: [string]): string;
    }>;

    getDeal: TypedFunctionDescription<{ encode([id]: [BigNumberish]): string }>;

    getDealCount: TypedFunctionDescription<{ encode([]: []): string }>;

    getDealStatus: TypedFunctionDescription<{
      encode([id]: [BigNumberish]): string;
    }>;
  };

  events: {
    Debug: TypedEventDescription<{
      encodeTopics([message, num]: [null, null]): string[];
    }>;
  };
}

export class DealRoom extends Contract {
  connect(signerOrProvider: Signer | Provider | string): DealRoom;
  attach(addressOrName: string): DealRoom;
  deployed(): Promise<DealRoom>;

  on(event: EventFilter | string, listener: Listener): DealRoom;
  once(event: EventFilter | string, listener: Listener): DealRoom;
  addListener(eventName: EventFilter | string, listener: Listener): DealRoom;
  removeAllListeners(eventName: EventFilter | string): DealRoom;
  removeListener(eventName: any, listener: Listener): DealRoom;

  interface: DealRoomInterface;

  functions: {
    buyer(overrides?: TransactionOverrides): Promise<string>;

    "buyer()"(overrides?: TransactionOverrides): Promise<string>;

    creator(overrides?: TransactionOverrides): Promise<string>;

    "creator()"(overrides?: TransactionOverrides): Promise<string>;

    dealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

    "dealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    deals(
      arg0: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      id: BigNumber;
      erc20: string;
      erc721: string;
      price: BigNumber;
      status: number;
      valid: boolean;
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
      5: boolean;
    }>;

    "deals(uint256)"(
      arg0: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      id: BigNumber;
      erc20: string;
      erc721: string;
      price: BigNumber;
      status: number;
      valid: boolean;
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: number;
      5: boolean;
    }>;

    erc20(overrides?: TransactionOverrides): Promise<string>;

    "erc20()"(overrides?: TransactionOverrides): Promise<string>;

    erc721(overrides?: TransactionOverrides): Promise<string>;

    "erc721()"(overrides?: TransactionOverrides): Promise<string>;

    owner(overrides?: TransactionOverrides): Promise<string>;

    "owner()"(overrides?: TransactionOverrides): Promise<string>;

    seller(overrides?: TransactionOverrides): Promise<string>;

    "seller()"(overrides?: TransactionOverrides): Promise<string>;

    makeDeal(
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "makeDeal(address,address,uint256,uint256[])"(
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "missingDealAssets(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    missingDealCoins(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "missingDealCoins(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    settle(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "settle(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "withdrawDealAssets(uint256,uint256)"(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawDealCoins(
      dealId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "withdrawDealCoins(uint256)"(
      dealId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    getOwner(overrides?: TransactionOverrides): Promise<string>;

    "getOwner()"(overrides?: TransactionOverrides): Promise<string>;

    getBuyer(overrides?: TransactionOverrides): Promise<string>;

    "getBuyer()"(overrides?: TransactionOverrides): Promise<string>;

    getSeller(overrides?: TransactionOverrides): Promise<string>;

    "getSeller()"(overrides?: TransactionOverrides): Promise<string>;

    changeOwner(
      newOwner: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "changeOwner(address)"(
      newOwner: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    getDeal(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      id: BigNumber;
      erc20: string;
      erc721: string;
      price: BigNumber;
      assetItems: BigNumber[];
      status: number;
      valid: boolean;
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber[];
      5: number;
      6: boolean;
    }>;

    "getDeal(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<{
      id: BigNumber;
      erc20: string;
      erc721: string;
      price: BigNumber;
      assetItems: BigNumber[];
      status: number;
      valid: boolean;
      0: BigNumber;
      1: string;
      2: string;
      3: BigNumber;
      4: BigNumber[];
      5: number;
      6: boolean;
    }>;

    getDealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getDealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    getDealStatus(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<number>;

    "getDealStatus(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<number>;
  };

  buyer(overrides?: TransactionOverrides): Promise<string>;

  "buyer()"(overrides?: TransactionOverrides): Promise<string>;

  creator(overrides?: TransactionOverrides): Promise<string>;

  "creator()"(overrides?: TransactionOverrides): Promise<string>;

  dealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

  "dealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  deals(
    arg0: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    id: BigNumber;
    erc20: string;
    erc721: string;
    price: BigNumber;
    status: number;
    valid: boolean;
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: number;
    5: boolean;
  }>;

  "deals(uint256)"(
    arg0: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    id: BigNumber;
    erc20: string;
    erc721: string;
    price: BigNumber;
    status: number;
    valid: boolean;
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: number;
    5: boolean;
  }>;

  erc20(overrides?: TransactionOverrides): Promise<string>;

  "erc20()"(overrides?: TransactionOverrides): Promise<string>;

  erc721(overrides?: TransactionOverrides): Promise<string>;

  "erc721()"(overrides?: TransactionOverrides): Promise<string>;

  owner(overrides?: TransactionOverrides): Promise<string>;

  "owner()"(overrides?: TransactionOverrides): Promise<string>;

  seller(overrides?: TransactionOverrides): Promise<string>;

  "seller()"(overrides?: TransactionOverrides): Promise<string>;

  makeDeal(
    _erc20: string,
    _erc721: string,
    _price: BigNumberish,
    _assetItems: BigNumberish[],
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "makeDeal(address,address,uint256,uint256[])"(
    _erc20: string,
    _erc721: string,
    _price: BigNumberish,
    _assetItems: BigNumberish[],
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  missingDealAssets(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  "missingDealAssets(uint256)"(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  missingDealCoins(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  "missingDealCoins(uint256)"(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  settle(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "settle(uint256)"(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  withdrawDealAssets(
    dealId: BigNumberish,
    count: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "withdrawDealAssets(uint256,uint256)"(
    dealId: BigNumberish,
    count: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  withdrawDealCoins(
    dealId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "withdrawDealCoins(uint256)"(
    dealId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  getOwner(overrides?: TransactionOverrides): Promise<string>;

  "getOwner()"(overrides?: TransactionOverrides): Promise<string>;

  getBuyer(overrides?: TransactionOverrides): Promise<string>;

  "getBuyer()"(overrides?: TransactionOverrides): Promise<string>;

  getSeller(overrides?: TransactionOverrides): Promise<string>;

  "getSeller()"(overrides?: TransactionOverrides): Promise<string>;

  changeOwner(
    newOwner: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "changeOwner(address)"(
    newOwner: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  getDeal(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    id: BigNumber;
    erc20: string;
    erc721: string;
    price: BigNumber;
    assetItems: BigNumber[];
    status: number;
    valid: boolean;
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber[];
    5: number;
    6: boolean;
  }>;

  "getDeal(uint256)"(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<{
    id: BigNumber;
    erc20: string;
    erc721: string;
    price: BigNumber;
    assetItems: BigNumber[];
    status: number;
    valid: boolean;
    0: BigNumber;
    1: string;
    2: string;
    3: BigNumber;
    4: BigNumber[];
    5: number;
    6: boolean;
  }>;

  getDealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

  "getDealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  getDealStatus(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<number>;

  "getDealStatus(uint256)"(
    id: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<number>;

  filters: {
    Debug(message: null, num: null): EventFilter;
  };

  estimate: {
    buyer(overrides?: TransactionOverrides): Promise<BigNumber>;

    "buyer()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    creator(overrides?: TransactionOverrides): Promise<BigNumber>;

    "creator()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    dealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

    "dealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    deals(
      arg0: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "deals(uint256)"(
      arg0: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    erc20(overrides?: TransactionOverrides): Promise<BigNumber>;

    "erc20()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    erc721(overrides?: TransactionOverrides): Promise<BigNumber>;

    "erc721()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    owner(overrides?: TransactionOverrides): Promise<BigNumber>;

    "owner()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    seller(overrides?: TransactionOverrides): Promise<BigNumber>;

    "seller()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    makeDeal(
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "makeDeal(address,address,uint256,uint256[])"(
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "missingDealAssets(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    missingDealCoins(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "missingDealCoins(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    settle(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "settle(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "withdrawDealAssets(uint256,uint256)"(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    withdrawDealCoins(
      dealId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "withdrawDealCoins(uint256)"(
      dealId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    getOwner(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getOwner()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    getBuyer(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getBuyer()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    getSeller(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getSeller()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    changeOwner(
      newOwner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "changeOwner(address)"(
      newOwner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    getDeal(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "getDeal(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    getDealCount(overrides?: TransactionOverrides): Promise<BigNumber>;

    "getDealCount()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    getDealStatus(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "getDealStatus(uint256)"(
      id: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
