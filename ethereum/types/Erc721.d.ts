/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface Erc721Interface extends Interface {
  functions: {
    supportsInterface: TypedFunctionDescription<{
      encode([interfaceId]: [Arrayish]): string;
    }>;

    balanceOf: TypedFunctionDescription<{ encode([owner]: [string]): string }>;

    ownerOf: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    name: TypedFunctionDescription<{ encode([]: []): string }>;

    symbol: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenURI: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    baseURI: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenOfOwnerByIndex: TypedFunctionDescription<{
      encode([owner, index]: [string, BigNumberish]): string;
    }>;

    totalSupply: TypedFunctionDescription<{ encode([]: []): string }>;

    tokenByIndex: TypedFunctionDescription<{
      encode([index]: [BigNumberish]): string;
    }>;

    approve: TypedFunctionDescription<{
      encode([to, tokenId]: [string, BigNumberish]): string;
    }>;

    getApproved: TypedFunctionDescription<{
      encode([tokenId]: [BigNumberish]): string;
    }>;

    setApprovalForAll: TypedFunctionDescription<{
      encode([operator, approved]: [string, boolean]): string;
    }>;

    isApprovedForAll: TypedFunctionDescription<{
      encode([owner, operator]: [string, string]): string;
    }>;

    transferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId]: [string, string, BigNumberish]): string;
    }>;

    safeTransferFrom: TypedFunctionDescription<{
      encode([from, to, tokenId]: [string, string, BigNumberish]): string;
    }>;
  };

  events: {
    Approval: TypedEventDescription<{
      encodeTopics([owner, approved, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;

    ApprovalForAll: TypedEventDescription<{
      encodeTopics([owner, operator, approved]: [
        string | null,
        string | null,
        null
      ]): string[];
    }>;

    Transfer: TypedEventDescription<{
      encodeTopics([from, to, tokenId]: [
        string | null,
        string | null,
        BigNumberish | null
      ]): string[];
    }>;
  };
}

export class Erc721 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Erc721;
  attach(addressOrName: string): Erc721;
  deployed(): Promise<Erc721>;

  on(event: EventFilter | string, listener: Listener): Erc721;
  once(event: EventFilter | string, listener: Listener): Erc721;
  addListener(eventName: EventFilter | string, listener: Listener): Erc721;
  removeAllListeners(eventName: EventFilter | string): Erc721;
  removeListener(eventName: any, listener: Listener): Erc721;

  interface: Erc721Interface;

  functions: {
    /**
     * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
     */
    supportsInterface(
      interfaceId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    /**
     * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
     */
    "supportsInterface(bytes4)"(
      interfaceId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    /**
     * See {IERC721-balanceOf}.
     */
    balanceOf(
      owner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-balanceOf}.
     */
    "balanceOf(address)"(
      owner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-ownerOf}.
     */
    ownerOf(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * See {IERC721-ownerOf}.
     */
    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * See {IERC721Metadata-name}.
     */
    name(overrides?: TransactionOverrides): Promise<string>;

    /**
     * See {IERC721Metadata-name}.
     */
    "name()"(overrides?: TransactionOverrides): Promise<string>;

    /**
     * See {IERC721Metadata-symbol}.
     */
    symbol(overrides?: TransactionOverrides): Promise<string>;

    /**
     * See {IERC721Metadata-symbol}.
     */
    "symbol()"(overrides?: TransactionOverrides): Promise<string>;

    /**
     * See {IERC721Metadata-tokenURI}.
     */
    tokenURI(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * See {IERC721Metadata-tokenURI}.
     */
    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
     */
    baseURI(overrides?: TransactionOverrides): Promise<string>;

    /**
     * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
     */
    "baseURI()"(overrides?: TransactionOverrides): Promise<string>;

    /**
     * See {IERC721Enumerable-tokenOfOwnerByIndex}.
     */
    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenOfOwnerByIndex}.
     */
    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-totalSupply}.
     */
    totalSupply(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-totalSupply}.
     */
    "totalSupply()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenByIndex}.
     */
    tokenByIndex(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenByIndex}.
     */
    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-approve}.
     */
    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-approve}.
     */
    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-getApproved}.
     */
    getApproved(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * See {IERC721-getApproved}.
     */
    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    /**
     * See {IERC721-setApprovalForAll}.
     */
    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-setApprovalForAll}.
     */
    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-isApprovedForAll}.
     */
    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    /**
     * See {IERC721-isApprovedForAll}.
     */
    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: TransactionOverrides
    ): Promise<boolean>;

    /**
     * See {IERC721-transferFrom}.
     */
    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-transferFrom}.
     */
    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    safeTransferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  /**
   * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
   */
  supportsInterface(
    interfaceId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  /**
   * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
   */
  "supportsInterface(bytes4)"(
    interfaceId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  /**
   * See {IERC721-balanceOf}.
   */
  balanceOf(
    owner: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721-balanceOf}.
   */
  "balanceOf(address)"(
    owner: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721-ownerOf}.
   */
  ownerOf(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * See {IERC721-ownerOf}.
   */
  "ownerOf(uint256)"(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * See {IERC721Metadata-name}.
   */
  name(overrides?: TransactionOverrides): Promise<string>;

  /**
   * See {IERC721Metadata-name}.
   */
  "name()"(overrides?: TransactionOverrides): Promise<string>;

  /**
   * See {IERC721Metadata-symbol}.
   */
  symbol(overrides?: TransactionOverrides): Promise<string>;

  /**
   * See {IERC721Metadata-symbol}.
   */
  "symbol()"(overrides?: TransactionOverrides): Promise<string>;

  /**
   * See {IERC721Metadata-tokenURI}.
   */
  tokenURI(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * See {IERC721Metadata-tokenURI}.
   */
  "tokenURI(uint256)"(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
   */
  baseURI(overrides?: TransactionOverrides): Promise<string>;

  /**
   * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
   */
  "baseURI()"(overrides?: TransactionOverrides): Promise<string>;

  /**
   * See {IERC721Enumerable-tokenOfOwnerByIndex}.
   */
  tokenOfOwnerByIndex(
    owner: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721Enumerable-tokenOfOwnerByIndex}.
   */
  "tokenOfOwnerByIndex(address,uint256)"(
    owner: string,
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721Enumerable-totalSupply}.
   */
  totalSupply(overrides?: TransactionOverrides): Promise<BigNumber>;

  /**
   * See {IERC721Enumerable-totalSupply}.
   */
  "totalSupply()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  /**
   * See {IERC721Enumerable-tokenByIndex}.
   */
  tokenByIndex(
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721Enumerable-tokenByIndex}.
   */
  "tokenByIndex(uint256)"(
    index: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  /**
   * See {IERC721-approve}.
   */
  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-approve}.
   */
  "approve(address,uint256)"(
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-getApproved}.
   */
  getApproved(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * See {IERC721-getApproved}.
   */
  "getApproved(uint256)"(
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  /**
   * See {IERC721-setApprovalForAll}.
   */
  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-setApprovalForAll}.
   */
  "setApprovalForAll(address,bool)"(
    operator: string,
    approved: boolean,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-isApprovedForAll}.
   */
  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  /**
   * See {IERC721-isApprovedForAll}.
   */
  "isApprovedForAll(address,address)"(
    owner: string,
    operator: string,
    overrides?: TransactionOverrides
  ): Promise<boolean>;

  /**
   * See {IERC721-transferFrom}.
   */
  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-transferFrom}.
   */
  "transferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-safeTransferFrom}.
   */
  safeTransferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-safeTransferFrom}.
   */
  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
   * See {IERC721-safeTransferFrom}.
   */
  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    Approval(
      owner: string | null,
      approved: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;

    ApprovalForAll(
      owner: string | null,
      operator: string | null,
      approved: null
    ): EventFilter;

    Transfer(
      from: string | null,
      to: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;
  };

  estimate: {
    /**
     * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
     */
    supportsInterface(
      interfaceId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.
     */
    "supportsInterface(bytes4)"(
      interfaceId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-balanceOf}.
     */
    balanceOf(
      owner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-balanceOf}.
     */
    "balanceOf(address)"(
      owner: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-ownerOf}.
     */
    ownerOf(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-ownerOf}.
     */
    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-name}.
     */
    name(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-name}.
     */
    "name()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-symbol}.
     */
    symbol(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-symbol}.
     */
    "symbol()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-tokenURI}.
     */
    tokenURI(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Metadata-tokenURI}.
     */
    "tokenURI(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
     */
    baseURI(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.
     */
    "baseURI()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenOfOwnerByIndex}.
     */
    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenOfOwnerByIndex}.
     */
    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-totalSupply}.
     */
    totalSupply(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-totalSupply}.
     */
    "totalSupply()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenByIndex}.
     */
    tokenByIndex(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721Enumerable-tokenByIndex}.
     */
    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-approve}.
     */
    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-approve}.
     */
    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-getApproved}.
     */
    getApproved(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-getApproved}.
     */
    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-setApprovalForAll}.
     */
    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-setApprovalForAll}.
     */
    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-isApprovedForAll}.
     */
    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-isApprovedForAll}.
     */
    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-transferFrom}.
     */
    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-transferFrom}.
     */
    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    safeTransferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
     * See {IERC721-safeTransferFrom}.
     */
    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
