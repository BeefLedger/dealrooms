/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { WhitelistedRole } from "./WhitelistedRole";

export class WhitelistedRoleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<WhitelistedRole> {
    return super.deploy(overrides || {}) as Promise<WhitelistedRole>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WhitelistedRole {
    return super.attach(address) as WhitelistedRole;
  }
  connect(signer: Signer): WhitelistedRoleFactory {
    return super.connect(signer) as WhitelistedRoleFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistedRole {
    return new Contract(address, _abi, signerOrProvider) as WhitelistedRole;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "renounceWhitelistAdmin",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "addWhitelistAdmin",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "isWhitelistAdmin",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "WhitelistedAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "WhitelistedRemoved",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "WhitelistAdminAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "WhitelistAdminRemoved",
    type: "event"
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "isWhitelisted",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "addWhitelisted",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "removeWhitelisted",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "renounceWhitelisted",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405261002061001561002560201b60201c565b61002960201b60201c565b61019c565b3390565b61004181600061007860201b6104471790919060201c565b6040516001600160a01b038216907f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129990600090a250565b610088828261011960201b60201c565b156100f457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216151561017c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806107916022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6105e6806101ab6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634c5a628c1161005b5780634c5a628c1461010a5780637362d9c814610112578063bb5f747b14610138578063d6cd94731461015e5761007d565b806310154bad14610082578063291d9549146100aa5780633af32abf146100d0575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b0316610166565b005b6100a8600480360360208110156100c057600080fd5b50356001600160a01b03166101c2565b6100f6600480360360208110156100e657600080fd5b50356001600160a01b0316610216565b604080519115158252519081900360200190f35b6100a861022f565b6100a86004803603602081101561012857600080fd5b50356001600160a01b0316610241565b6100f66004803603602081101561014e57600080fd5b50356001600160a01b0316610295565b6100a86102a7565b6101766101716102b7565b610295565b15156101b657604051600160e51b62461bcd02815260040180806020018281038252604081526020018061057b6040913960400191505060405180910390fd5b6101bf816102bb565b50565b6101cd6101716102b7565b151561020d57604051600160e51b62461bcd02815260040180806020018281038252604081526020018061057b6040913960400191505060405180910390fd5b6101bf81610303565b600061022960018363ffffffff61034b16565b92915050565b61023f61023a6102b7565b6103b7565b565b61024c6101716102b7565b151561028c57604051600160e51b62461bcd02815260040180806020018281038252604081526020018061057b6040913960400191505060405180910390fd5b6101bf816103ff565b6000610229818363ffffffff61034b16565b61023f6102b26102b7565b610303565b3390565b6102cc60018263ffffffff61044716565b6040516001600160a01b038216907fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f90600090a250565b61031460018263ffffffff6104cb16565b6040516001600160a01b038216907f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b690600090a250565b60006001600160a01b038216151561039757604051600160e51b62461bcd0281526004018080602001828103825260228152602001806105596022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6103c860008263ffffffff6104cb16565b6040516001600160a01b038216907f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16590600090a250565b61041060008263ffffffff61044716565b6040516001600160a01b038216907f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129990600090a250565b610451828261034b565b156104a65760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6104d5828261034b565b151561051557604051600160e51b62461bcd0281526004018080602001828103825260218152602001806105386021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737357686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c65a165627a7a723058206d6f16a350575ba3eb67120ea14be9084d37ef8b3d82eebd99f7f89c5d3cc49e0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";
