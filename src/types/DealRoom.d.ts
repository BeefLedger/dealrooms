/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DealRoomInterface extends ethers.utils.Interface {
  functions: {
    "erc20()": FunctionFragment;
    "erc721()": FunctionFragment;
    "dealCount()": FunctionFragment;
    "makeDeal(uint256,address,address,address,uint256,uint256[])": FunctionFragment;
    "missingDealAssets(uint256)": FunctionFragment;
    "missingDealTokens(uint256)": FunctionFragment;
    "settle(uint256)": FunctionFragment;
    "withdrawDealAssets(uint256,uint256)": FunctionFragment;
    "withdrawDealTokens(uint256)": FunctionFragment;
    "getOwner()": FunctionFragment;
    "changeOwner(address)": FunctionFragment;
    "getDeal(uint256)": FunctionFragment;
    "getDealStatus(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "erc20", values?: undefined): string;
  encodeFunctionData(functionFragment: "erc721", values?: undefined): string;
  encodeFunctionData(functionFragment: "dealCount", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "makeDeal",
    values: [BigNumberish, string, string, string, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "missingDealAssets",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "missingDealTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawDealAssets",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawDealTokens",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getOwner", values?: undefined): string;
  encodeFunctionData(functionFragment: "changeOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getDeal",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDealStatus",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "erc20", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "erc721", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "dealCount", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "makeDeal", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "missingDealAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "missingDealTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "settle", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawDealAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawDealTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDeal", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getDealStatus",
    data: BytesLike
  ): Result;

  events: {};
}

export class DealRoom extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DealRoomInterface;

  functions: {
    erc20(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    erc721(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    dealCount(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    makeDeal(
      _id: BigNumberish,
      _arbitrator: string,
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    missingDealTokens(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    settle(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawDealTokens(
      dealId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getOwner(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    changeOwner(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getDeal(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        id: BigNumber;
        arbitrator: string;
        erc20: string;
        erc721: string;
        price: BigNumber;
        assetItems: BigNumber[];
        status: number;
        valid: boolean;
        0: BigNumber;
        1: string;
        2: string;
        3: string;
        4: BigNumber;
        5: BigNumber[];
        6: number;
        7: boolean;
      };
    }>;

    getDealStatus(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;
  };

  erc20(overrides?: CallOverrides): Promise<string>;

  erc721(overrides?: CallOverrides): Promise<string>;

  dealCount(overrides?: CallOverrides): Promise<BigNumber>;

  makeDeal(
    _id: BigNumberish,
    _arbitrator: string,
    _erc20: string,
    _erc721: string,
    _price: BigNumberish,
    _assetItems: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  missingDealAssets(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  missingDealTokens(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  settle(id: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  withdrawDealAssets(
    dealId: BigNumberish,
    count: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawDealTokens(
    dealId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getOwner(overrides?: CallOverrides): Promise<string>;

  changeOwner(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getDeal(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    id: BigNumber;
    arbitrator: string;
    erc20: string;
    erc721: string;
    price: BigNumber;
    assetItems: BigNumber[];
    status: number;
    valid: boolean;
    0: BigNumber;
    1: string;
    2: string;
    3: string;
    4: BigNumber;
    5: BigNumber[];
    6: number;
    7: boolean;
  }>;

  getDealStatus(id: BigNumberish, overrides?: CallOverrides): Promise<number>;

  callStatic: {
    erc20(overrides?: CallOverrides): Promise<string>;

    erc721(overrides?: CallOverrides): Promise<string>;

    dealCount(overrides?: CallOverrides): Promise<BigNumber>;

    makeDeal(
      _id: BigNumberish,
      _arbitrator: string,
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    missingDealTokens(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    settle(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawDealTokens(
      dealId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getOwner(overrides?: CallOverrides): Promise<string>;

    changeOwner(newOwner: string, overrides?: CallOverrides): Promise<void>;

    getDeal(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      id: BigNumber;
      arbitrator: string;
      erc20: string;
      erc721: string;
      price: BigNumber;
      assetItems: BigNumber[];
      status: number;
      valid: boolean;
      0: BigNumber;
      1: string;
      2: string;
      3: string;
      4: BigNumber;
      5: BigNumber[];
      6: number;
      7: boolean;
    }>;

    getDealStatus(id: BigNumberish, overrides?: CallOverrides): Promise<number>;
  };

  filters: {};

  estimateGas: {
    erc20(overrides?: CallOverrides): Promise<BigNumber>;

    erc721(overrides?: CallOverrides): Promise<BigNumber>;

    dealCount(overrides?: CallOverrides): Promise<BigNumber>;

    makeDeal(
      _id: BigNumberish,
      _arbitrator: string,
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    missingDealTokens(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    settle(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawDealTokens(
      dealId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getOwner(overrides?: CallOverrides): Promise<BigNumber>;

    changeOwner(newOwner: string, overrides?: Overrides): Promise<BigNumber>;

    getDeal(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    getDealStatus(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    erc20(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    erc721(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    dealCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    makeDeal(
      _id: BigNumberish,
      _arbitrator: string,
      _erc20: string,
      _erc721: string,
      _price: BigNumberish,
      _assetItems: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    missingDealAssets(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    missingDealTokens(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    settle(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawDealAssets(
      dealId: BigNumberish,
      count: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawDealTokens(
      dealId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    changeOwner(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getDeal(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDealStatus(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
