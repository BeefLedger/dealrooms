/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Erc20Burnable } from "./Erc20Burnable";

export class Erc20BurnableFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Erc20Burnable> {
    return super.deploy(overrides || {}) as Promise<Erc20Burnable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc20Burnable {
    return super.attach(address) as Erc20Burnable;
  }
  connect(signer: Signer): Erc20BurnableFactory {
    return super.connect(signer) as Erc20BurnableFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Burnable {
    return new Contract(address, _abi, signerOrProvider) as Erc20Burnable;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "sender",
        type: "address"
      },
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address"
      },
      {
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526109fd806100136000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806342966c681161006657806342966c681461015457806370a0823114610173578063a457c2d714610199578063a9059cbb146101c5578063dd62ed3e146101f157610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633950935114610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b506001600160a01b03813516906020013561021f565b604080519115158252519081900360200190f35b6100e061023c565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b506001600160a01b03813581169160208101359091169060400135610242565b6100c46004803603604081101561013e57600080fd5b506001600160a01b0381351690602001356102cf565b6101716004803603602081101561016a57600080fd5b5035610323565b005b6100e06004803603602081101561018957600080fd5b50356001600160a01b0316610337565b6100c4600480360360408110156101af57600080fd5b506001600160a01b038135169060200135610352565b6100c4600480360360408110156101db57600080fd5b506001600160a01b0381351690602001356103c0565b6100e06004803603604081101561020757600080fd5b506001600160a01b03813581169160200135166103d4565b600061023361022c6103ff565b8484610403565b50600192915050565b60025490565b600061024f8484846104f9565b6102c58461025b6103ff565b6102c0856040518060600160405280602781526020016108b7602791396001600160a01b038a166000908152600160205260408120906102996103ff565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61065f16565b610403565b5060019392505050565b60006102336102dc6103ff565b846102c085600160006102ed6103ff565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6106f916565b61033461032e6103ff565b8261075d565b50565b6001600160a01b031660009081526020819052604090205490565b600061023361035f6103ff565b846102c08560405180606001604052806024815260200161098960249139600160006103896103ff565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61065f16565b60006102336103cd6103ff565b84846104f9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b038316151561044d57604051600160e51b62461bcd0281526004018080602001828103825260238152602001806109006023913960400191505060405180910390fd5b6001600160a01b038216151561049757604051600160e51b62461bcd0281526004018080602001828103825260218152602001806109236021913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316151561054357604051600160e51b62461bcd0281526004018080602001828103825260248152602001806109656024913960400191505060405180910390fd5b6001600160a01b038216151561058d57604051600160e51b62461bcd0281526004018080602001828103825260228152602001806108de6022913960400191505060405180910390fd5b6105d0816040518060600160405280602581526020016109ad602591396001600160a01b038616600090815260208190526040902054919063ffffffff61065f16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610605908263ffffffff6106f916565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156106f157604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106b657818101518382015260200161069e565b50505050905090810190601f1680156106e35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107565760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821615156107bd5760408051600160e51b62461bcd02815260206004820181905260248201527f4552433230206275726e2066726f6d20746865207a65726f2061646472657373604482015290519081900360640190fd5b61080081604051806060016040528060218152602001610944602191396001600160a01b038516600090815260208190526040902054919063ffffffff61065f16565b6001600160a01b03831660009081526020819052604090205560025461082c908263ffffffff61087416565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600061075683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061065f56fe4552433230207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654552433230207472616e7366657220746f20746865207a65726f2061646472657373455243323020617070726f76652066726f6d20746865207a65726f2061646472657373455243323020617070726f766520746f20746865207a65726f20616464726573734552433230206275726e20616d6f756e7420657863656564732062616c616e63654552433230207472616e736665722066726f6d20746865207a65726f206164647265737345524332302064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4552433230207472616e7366657220616d6f756e7420657863656564732062616c616e6365a165627a7a72305820d9cdb51f658fbd30f3abd58be8b85fd5c04747d975db52d124ccc785586d07230029";
