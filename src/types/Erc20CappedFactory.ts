/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Erc20Capped } from "./Erc20Capped";

export class Erc20CappedFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(cap: BigNumberish, overrides?: Overrides): Promise<Erc20Capped> {
    return super.deploy(cap, overrides || {}) as Promise<Erc20Capped>;
  }
  getDeployTransaction(
    cap: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(cap, overrides || {});
  }
  attach(address: string): Erc20Capped {
    return super.attach(address) as Erc20Capped;
  }
  connect(signer: Signer): Erc20CappedFactory {
    return super.connect(signer) as Erc20CappedFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Capped {
    return new Contract(address, _abi, signerOrProvider) as Erc20Capped;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "sender",
        type: "address"
      },
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "stopMinting",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "addMinter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "recipient",
        type: "address"
      },
      {
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "account",
        type: "address"
      }
    ],
    name: "isMinter",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "canMint",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address"
      },
      {
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        name: "cap",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "MinterAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address"
      }
    ],
    name: "MinterRemoved",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    constant: true,
    inputs: [],
    name: "cap",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526004805460ff1916600117905534801561001d57600080fd5b506040516020806111398339810180604052602081101561003d57600080fd5b505161005c6100516100d2602090811b901c565b6100d660201b60201c565b8015156100ca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b600555610249565b3390565b6100ee81600361012560201b610c361790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61013582826101c660201b60201c565b156101a157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382161515610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111176022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610ebf806102586000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610274578063aa271e1a146102a0578063beb9716d146102c6578063dd62ed3e146102ce576100f5565b806370a08231146101f4578063983b2d561461021a5780639865027514610240578063a457c2d714610248576100f5565b8063355274ea116100d3578063355274ea1461018a57806339509351146101925780633e3e0b12146101be57806340c10f19146101c8576100f5565b8063095ea7b3146100fa57806318160ddd1461013a57806323b872dd14610154575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356102fc565b604080519115158252519081900360200190f35b610142610319565b60408051918252519081900360200190f35b6101266004803603606081101561016a57600080fd5b506001600160a01b0381358116916020810135909116906040013561031f565b6101426103ac565b610126600480360360408110156101a857600080fd5b506001600160a01b0381351690602001356103b2565b6101c6610406565b005b610126600480360360408110156101de57600080fd5b506001600160a01b038135169060200135610462565b6101426004803603602081101561020a57600080fd5b50356001600160a01b0316610515565b6101c66004803603602081101561023057600080fd5b50356001600160a01b0316610530565b6101c6610587565b6101266004803603604081101561025e57600080fd5b506001600160a01b038135169060200135610599565b6101266004803603604081101561028a57600080fd5b506001600160a01b038135169060200135610607565b610126600480360360208110156102b657600080fd5b50356001600160a01b031661061b565b610126610634565b610142600480360360408110156102e457600080fd5b506001600160a01b038135811691602001351661063d565b6000610310610309610668565b848461066c565b50600192915050565b60025490565b600061032c848484610762565b6103a284610338610668565b61039d85604051806060016040528060278152602001610d27602791396001600160a01b038a16600090815260016020526040812090610376610668565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6108c816565b61066c565b5060019392505050565b60055490565b60006103106103bf610668565b8461039d85600160006103d0610668565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61096216565b610416610411610668565b61061b565b151561045657604051600160e51b62461bcd028152600401808060200182810382526030815260200180610db46030913960400191505060405180910390fd5b6004805460ff19169055565b600061046f610411610668565b15156104af57604051600160e51b62461bcd028152600401808060200182810382526030815260200180610db46030913960400191505060405180910390fd5b60045460ff16151561050b5760408051600160e51b62461bcd02815260206004820152601260248201527f43616e6e6f74206d696e7420746f6b656e730000000000000000000000000000604482015290519081900360640190fd5b61031083836109c6565b6001600160a01b031660009081526020819052604090205490565b61053b610411610668565b151561057b57604051600160e51b62461bcd028152600401808060200182810382526030815260200180610db46030913960400191505060405180910390fd5b61058481610a45565b50565b610597610592610668565b610a8d565b565b60006103106105a6610668565b8461039d85604051806060016040528060248152602001610e4b60249139600160006105d0610668565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6108c816565b6000610310610614610668565b8484610762565b600061062e60038363ffffffff610ad516565b92915050565b60045460ff1681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831615156106b657604051600160e51b62461bcd028152600401808060200182810382526023815260200180610d706023913960400191505060405180910390fd5b6001600160a01b038216151561070057604051600160e51b62461bcd028152600401808060200182810382526021815260200180610d936021913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831615156107ac57604051600160e51b62461bcd028152600401808060200182810382526024815260200180610e276024913960400191505060405180910390fd5b6001600160a01b03821615156107f657604051600160e51b62461bcd028152600401808060200182810382526022815260200180610d4e6022913960400191505060405180910390fd5b61083981604051806060016040528060258152602001610e6f602591396001600160a01b038616600090815260208190526040902054919063ffffffff6108c816565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461086e908263ffffffff61096216565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561095a57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561091f578181015183820152602001610907565b50505050905090810190601f16801561094c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156109bf5760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6005546109e1826109d5610319565b9063ffffffff61096216565b1115610a375760408051600160e51b62461bcd02815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b610a418282610b41565b5050565b610a5660038263ffffffff610c3616565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a9e60038263ffffffff610cba16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382161515610b2157604051600160e51b62461bcd028152600401808060200182810382526022815260200180610e056022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0382161515610ba15760408051600160e51b62461bcd02815260206004820152601e60248201527f4552433230206d696e7420746f20746865207a65726f20616464726573730000604482015290519081900360640190fd5b600254610bb4908263ffffffff61096216565b6002556001600160a01b038216600090815260208190526040902054610be0908263ffffffff61096216565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610c408282610ad5565b15610c955760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610cc48282610ad5565b1515610d0457604051600160e51b62461bcd028152600401808060200182810382526021815260200180610de46021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fe4552433230207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654552433230207472616e7366657220746f20746865207a65726f2061646472657373455243323020617070726f76652066726f6d20746865207a65726f2061646472657373455243323020617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433230207472616e736665722066726f6d20746865207a65726f206164647265737345524332302064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4552433230207472616e7366657220616d6f756e7420657863656564732062616c616e6365a165627a7a7230582011219138cc3ba2ed5771f6f6c579b02ac0556f0d24778107f657156fa13ed3d00029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";
