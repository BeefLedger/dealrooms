{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/projects/beefledger/investor-engine/contracts/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/projects/beefledger/investor-engine/contracts/ERC721/ERC721.sol\":{\"keccak256\":\"0x33090ad3605c26d31dce7712b4e8d1a93816637c8568d93f351b2ce84ab074eb\",\"urls\":[\"bzzr://88e6b43f4d2f4848996f605bb8d103a235d42c355f66fa0ff65aea9ce57eea9a\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x3a8a9b809b716b8c9f3a120c5dc32008b5f0911385299d36069f687ab2c67125\",\"urls\":[\"bzzr://e7fb1521c602a6d6a8dbf5d8f6d7f2c8d8706540b89ead5d2ce483669313f6e0\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzzr://c05fd4bec1bdd4719ca843db39522d8710d81cbf5022a9950009cd18c504985c\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x12de8f2850b4f42539d9f638c43a8f208b88f92b633879313eadf28a67a6abcf\",\"urls\":[\"bzzr://fc1ef4b08b952582b2827f716bcb56721d1db0641289aaf42d0bd558fd405e61\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/IERC721.sol\":{\"keccak256\":\"0x91be07c14b2ff08025075f36c4ad51cb5dc5ae94c2d817bcc1a8a45d474e6155\",\"urls\":[\"bzzr://90c52a834797133909bb4f4fc707d57cb38d8b0df4f9d6934ae59ce3cdf2ad39\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"/projects/beefledger/investor-engine/contracts/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"/projects/beefledger/investor-engine/contracts/GSN/Context.sol\":{\"keccak256\":\"0x9061d72fa4af111684138fb9f8d7071548c9fdbaafe8bcbc8daa70ac969dab5b\",\"urls\":[\"bzzr://1029880057f7d91412ed329bcfa1b0995fa4a7dc88629d439bfb906fd773b3fa\"]},\"/projects/beefledger/investor-engine/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"/projects/beefledger/investor-engine/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzzr://07dffd4225b87bb0aa8d02cfdb04640c2e02e59b35143accd0dd757775449c61\"]},\"/projects/beefledger/investor-engine/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"/projects/beefledger/investor-engine/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x559e1c41502e437b665893c320b2d70f1311492799916fabcb55f7b18100c0a2\",\"urls\":[\"bzzr://a0962f45f5f53e94c34f10d5b686489d271f8b4a5ad970fd8710edb04a963174\"]},\"/projects/beefledger/investor-engine/contracts/utils/Address.sol\":{\"keccak256\":\"0x24e5e69e549c7d468a7fa3c0ca1530656f7a960da9af5927bcc0e3261bf07bad\",\"urls\":[\"bzzr://51d7c70f2b471b74be5256f8d277401b361e79aaab3dd52d63ba63a52d20925f\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "386:227:13:-;;;456:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:155:13;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;456:155:13;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;456:155:13;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;456:155:13;;;;;;533:4;539:6;718:40:34;385:10;737:20;;718:18;;;:40;;:::i;:::-;2247::9;2121:10;2266:20;;2247:18;;;:40;;:::i;:::-;1351:51:12;1166:10;1370:31;;1351:18;;;:51;;:::i;:::-;860:12:15;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;882:16:15;;;;:7;;:16;;;;;:::i;:::-;;986:49;722:10;1005:29;;986:18;;;:49;;:::i;:::-;788:254;;456:155:13;;386:227;;1442:190:34;1517:25;;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:34;1621:4;1585:40;;;1442:190::o;386:227:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;386:227:13;;;-1:-1:-1;386:227:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "386:227:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:227:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:34;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:34;-1:-1:-1;;;;;;915:133:34;;:::i;:::-;;;;;;;;;;;;;;;;;;1147:83:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1147:83:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:200:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4268:200:9;;:::i;:::-;;;;-1:-1:-1;;;;;4268:200:9;;;;;;;;;;;;;;3568:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3568:415:9;;;;;;;;:::i;:::-;;2165:94:12;;;:::i;:::-;;;;;;;;;;;;;;;;5914:287:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5914:287:9;;;;;;;;;;;;;;;;;:::i;1783:229:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1783:229:12;;;;;;;;:::i;6850:132:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6850:132:9;;;;;;;;;;;;;;;;;:::i;2597:196:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2597:196:12;;:::i;2924:223:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2924:223:9;;:::i;2498:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2498:207:9;-1:-1:-1;;;;;2498:207:9;;:::i;1339:87:15:-;;;:::i;4761:249:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4761:249:9;;;;;;;;;;:::i;7705:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7705:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7705:269:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7705:269:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7705:269:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7705:269:9;;-1:-1:-1;7705:269:9;;-1:-1:-1;;;;;7705:269:9:i;1626:202:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1626:202:15;;:::i;5332:145:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5332:145:9;;;;;;;;;;:::i;915:133:34:-;-1:-1:-1;;;;;;1008:33:34;985:4;1008:33;;;;;;;;;;;;;;915:133::o;1147:83:15:-;1218:5;1211:12;;;;;;;;-1:-1:-1;;1211:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1186:13;;1211:12;;1218:5;;1211:12;;1218:5;1211:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:83;;:::o;4268:200:9:-;4327:7;4354:16;4362:7;4354;:16::i;:::-;4346:73;;;;;;-1:-1:-1;;;;;4346:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4437:24:9;;;;:15;:24;;;;;;-1:-1:-1;;;;;4437:24:9;;4268:200::o;3568:415::-;3631:13;3647:16;3655:7;3647;:16::i;:::-;3631:32;-1:-1:-1;;;;;;3681:11:9;;;;;;;;3673:57;;;;-1:-1:-1;;;;;3673:57:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:5;-1:-1:-1;;;;;3749:21:9;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3749:21:9;;:62;;;;3774:37;3791:5;3798:12;:10;:12::i;:::-;3774:16;:37::i;:::-;3741:152;;;;;;-1:-1:-1;;;;;3741:152:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3904:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3904:29:9;-1:-1:-1;;;;;3904:29:9;;;;;;;;;3948:28;;3904:24;;3948:28;;;;;;;3568:415;;;:::o;2165:94:12:-;2235:10;:17;2165:94;:::o;5914:287:9:-;6056:41;6075:12;:10;:12::i;:::-;6089:7;6056:18;:41::i;:::-;6048:103;;;;;;-1:-1:-1;;;;;6048:103:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:32;6176:4;6182:2;6186:7;6162:13;:32::i;:::-;5914:287;;;:::o;1783:229:12:-;1863:7;1898:16;1908:5;1898:9;:16::i;:::-;1890:24;;1882:80;;;;-1:-1:-1;;;;;1882:80:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1979:19:12;;;;;;:12;:19;;;;;:26;;1999:5;;1979:26;;;;;;;;;;;;;;1972:33;;1783:229;;;;:::o;6850:132:9:-;6936:39;6953:4;6959:2;6963:7;6936:39;;;;;;;;;;;;:16;:39::i;2597:196:12:-;2655:7;2690:13;:11;:13::i;:::-;2682:21;;2674:78;;;;-1:-1:-1;;;;;2674:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:10;:17;;2780:5;;2769:17;;;;;;;;;;;;;;2762:24;;2597:196;;;:::o;2924:223:9:-;2979:7;3014:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3014:20:9;3052:19;;;3044:73;;;;-1:-1:-1;;;;;3044:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:5;2924:223;-1:-1:-1;;2924:223:9:o;2498:207::-;2553:7;-1:-1:-1;;;;;2580:19:9;;;;2572:74;;;;-1:-1:-1;;;;;2572:74:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2664:24:9;;;;;;:17;:24;;;;;:34;;:32;:34::i;1339:87:15:-;1412:7;1405:14;;;;;;;;-1:-1:-1;;1405:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:13;;1405:14;;1412:7;;1405:14;;1412:7;1405:14;;;;;;;;;;;;;;;;;;;;;;;;4761:249:9;4846:12;:10;:12::i;:::-;-1:-1:-1;;;;;4840:18:9;;;;;;;4832:56;;;;;-1:-1:-1;;;;;4832:56:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4938:8;4899:18;:32;4918:12;:10;:12::i;:::-;-1:-1:-1;;;;;4899:32:9;;;;;;;;;;;;;;;;;-1:-1:-1;4899:32:9;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4899:47:9;;;;;;;;;;;4976:12;:10;:12::i;:::-;4961:42;;;;;;;;;;-1:-1:-1;;;;;4961:42:9;;;;;;;;;;;;;;4761:249;;:::o;7705:269::-;7819:41;7838:12;:10;:12::i;:::-;7852:7;7819:18;:41::i;:::-;7811:103;;;;;;-1:-1:-1;;;;;7811:103:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7924:43;7942:4;7948:2;7952:7;7961:5;7924:17;:43::i;:::-;7705:269;;;;:::o;1626:202:15:-;1684:13;1717:16;1725:7;1717;:16::i;:::-;1709:76;;;;;;-1:-1:-1;;;;;1709:76:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;;;;:10;:19;;;;;;;;;1795:26;;;;;;-1:-1:-1;;1795:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;;1795:26;;1802:19;1795:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:202;;;:::o;5332:145:9:-;-1:-1:-1;;;;;5435:25:9;;;5412:4;5435:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5332:145::o;9143:152::-;9200:4;9232:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9232:20:9;9269:19;;;9143:152::o;793:96:24:-;872:10;793:96;:::o;9656:329:9:-;9741:4;9765:16;9773:7;9765;:16::i;:::-;9757:73;;;;;;-1:-1:-1;;;;;9757:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9840:13;9856:16;9864:7;9856;:16::i;:::-;9840:32;;9901:5;-1:-1:-1;;;;;9890:16:9;:7;-1:-1:-1;;;;;9890:16:9;;:51;;;;9934:7;-1:-1:-1;;;;;9910:31:9;:20;9922:7;9910:11;:20::i;:::-;-1:-1:-1;;;;;9910:31:9;;9890:51;:87;;;;9945:32;9962:5;9969:7;9945:16;:32::i;:::-;9882:96;9656:329;-1:-1:-1;;;;9656:329:9:o;3168:239:12:-;3253:38;3273:4;3279:2;3283:7;3253:19;:38::i;:::-;3302:47;3335:4;3341:7;3302:32;:47::i;:::-;3360:40;3388:2;3392:7;3360:27;:40::i;1065:112:33:-;1156:14;;1065:112::o;8679:269:9:-;8788:32;8802:4;8808:2;8812:7;8788:13;:32::i;:::-;8838:48;8861:4;8867:2;8871:7;8880:5;8838:22;:48::i;:::-;8830:111;;;;;;-1:-1:-1;;;;;8830:111:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13266:447;13379:4;-1:-1:-1;;;;;13359:24:9;:16;13367:7;13359;:16::i;:::-;-1:-1:-1;;;;;13359:24:9;;13351:78;;;;-1:-1:-1;;;;;13351:78:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13447:16:9;;;;13439:65;;;;-1:-1:-1;;;;;13439:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13515:23;13530:7;13515:14;:23::i;:::-;-1:-1:-1;;;;;13549:23:9;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13594:21:9;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13638:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13638:25:9;-1:-1:-1;;;;;13638:25:9;;;;;;;;;13679:27;;13638:20;;13679:27;;;;;;;13266:447;;;:::o;6278:1128:12:-;-1:-1:-1;;;;;6565:18:12;;6540:22;6565:18;;;:12;:18;;;;;:25;:32;;6595:1;6565:32;:29;:32;:::i;:::-;6607:18;6628:26;;;:17;:26;;;;;;6540:57;;-1:-1:-1;6758:28:12;;;6754:323;;-1:-1:-1;;;;;6824:18:12;;6802:19;6824:18;;;:12;:18;;;;;:34;;6843:14;;6824:34;;;;;;;;;;;;;;6802:56;;6906:11;6873:12;:18;6886:4;-1:-1:-1;;;;;6873:18:12;-1:-1:-1;;;;;6873:18:12;;;;;;;;;;;;6892:10;6873:30;;;;;;;;;;;;;;;;;;;;;:44;;;;6989:30;;;:17;:30;;;;;:43;;;6754:323;-1:-1:-1;;;;;7163:18:12;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7163:27:12;;;:::i;:::-;;6278:1128;;;;:::o;5122:183::-;-1:-1:-1;;;;;5235:16:12;;;;;;;:12;:16;;;;;;;;:23;;5206:26;;;:17;:26;;;;;:52;;;5268:16;;;39:1:-1;23:18;;45:23;;5268:30:12;;;;;;;;5122:183::o;14302:349:9:-;14423:4;14448:15;:2;-1:-1:-1;;;;;14448:13:9;;:15::i;:::-;14447:16;14443:58;;;-1:-1:-1;14486:4:9;14479:11;;14443:58;14511:13;14543:2;-1:-1:-1;;;;;14527:36:9;;14564:12;:10;:12::i;:::-;14578:4;14584:7;14593:5;14527:72;;;;;;;;;;;;;-1:-1:-1;;;;;14527:72:9;-1:-1:-1;;;;;14527:72:9;;;;;;-1:-1:-1;;;;;14527:72:9;-1:-1:-1;;;;;14527:72:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14527:72:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14527:72:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14527:72:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14527:72:9;-1:-1:-1;;;;;;14617:26:9;-1:-1:-1;;;;;14617:26:9;;-1:-1:-1;;14302:349:9;;;;;;:::o;14813:171::-;14912:1;14876:24;;;:15;:24;;;;;;-1:-1:-1;;;;;14876:24:9;:38;14872:106;;14965:1;14930:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;14930:37:9;;;14872:106;14813:171;:::o;1367:108:33:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:37:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:37:o;557:797:39:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:39;;;1296:51;-1:-1:-1;;557:797:39:o;1844:187:37:-;1930:7;1965:12;1957:6;;;;1949:29;;;;-1:-1:-1;;;;;1949:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1949:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2000:5:37;;;1844:187::o;386:227:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology.\n *\n * See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        2518
      ]
    },
    "id": 2519,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2496,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2497,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2103,
        "src": "25:22:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 2498,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2495,
        "src": "48:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 2499,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2675,
        "src": "81:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2500,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2102,
              "src": "409:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2102",
                "typeString": "contract ERC721"
              }
            },
            "id": 2501,
            "nodeType": "InheritanceSpecifier",
            "src": "409:6:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2502,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2494,
              "src": "417:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2494",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 2503,
            "nodeType": "InheritanceSpecifier",
            "src": "417:16:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2504,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2674,
              "src": "435:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2674",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 2505,
            "nodeType": "InheritanceSpecifier",
            "src": "435:14:13"
          }
        ],
        "contractDependencies": [
          2102,
          2494,
          2674,
          2946,
          2973,
          3008,
          3051,
          3918,
          3928
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 2518,
        "linearizedBaseContracts": [
          2518,
          2674,
          3008,
          2494,
          2973,
          2102,
          2946,
          3918,
          3928,
          3051
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2516,
              "nodeType": "Block",
              "src": "547:64:13",
              "statements": []
            },
            "documentation": null,
            "id": 2517,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2512,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2507,
                    "src": "533:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2513,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2509,
                    "src": "539:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2511,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2674,
                  "src": "518:14:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2674_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "518:28:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2507,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "469:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "489:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "468:42:13"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:13"
            },
            "scope": 2518,
            "src": "456:155:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2519,
        "src": "386:227:13"
      }
    ],
    "src": "0:614:13"
  },
  "legacyAST": {
    "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        2518
      ]
    },
    "id": 2519,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2496,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2497,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2103,
        "src": "25:22:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 2498,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2495,
        "src": "48:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/projects/beefledger/investor-engine/contracts/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 2499,
        "nodeType": "ImportDirective",
        "scope": 2519,
        "sourceUnit": 2675,
        "src": "81:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2500,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2102,
              "src": "409:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2102",
                "typeString": "contract ERC721"
              }
            },
            "id": 2501,
            "nodeType": "InheritanceSpecifier",
            "src": "409:6:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2502,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2494,
              "src": "417:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2494",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 2503,
            "nodeType": "InheritanceSpecifier",
            "src": "417:16:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2504,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2674,
              "src": "435:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2674",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 2505,
            "nodeType": "InheritanceSpecifier",
            "src": "435:14:13"
          }
        ],
        "contractDependencies": [
          2102,
          2494,
          2674,
          2946,
          2973,
          3008,
          3051,
          3918,
          3928
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 2518,
        "linearizedBaseContracts": [
          2518,
          2674,
          3008,
          2494,
          2973,
          2102,
          2946,
          3918,
          3928,
          3051
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2516,
              "nodeType": "Block",
              "src": "547:64:13",
              "statements": []
            },
            "documentation": null,
            "id": 2517,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2512,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2507,
                    "src": "533:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2513,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2509,
                    "src": "539:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2514,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2511,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2674,
                  "src": "518:14:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2674_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "518:28:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2507,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "469:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2517,
                  "src": "489:20:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "468:42:13"
            },
            "returnParameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:13"
            },
            "scope": 2518,
            "src": "456:155:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2519,
        "src": "386:227:13"
      }
    ],
    "src": "0:614:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-07-30T12:28:01.383Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}